[gd_scene load_steps=22 format=2]

[ext_resource path="res://world/map.gd" type="Script" id=1]
[ext_resource path="res://world/dec_mob_nav.gd" type="Script" id=2]
[ext_resource path="res://world/zombie1_nav.gd" type="Script" id=3]
[ext_resource path="res://world/Dec_mob.tscn" type="PackedScene" id=4]
[ext_resource path="res://gui/stove_ui.tscn" type="PackedScene" id=5]
[ext_resource path="res://world/map.tscn" type="PackedScene" id=6]
[ext_resource path="res://car.tscn" type="PackedScene" id=7]
[ext_resource path="res://player_model/player.tscn" type="PackedScene" id=8]
[ext_resource path="res://textures/car2.png" type="Texture" id=9]
[ext_resource path="res://textures/gui/point_car.png" type="Texture" id=10]
[ext_resource path="res://textures/kust/kust2.png" type="Texture" id=11]
[ext_resource path="res://world/select.gd" type="Script" id=12]

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform vec4 color : hint_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false


void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}
render_mode unshaded;
bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/color = Color( 1, 0, 0, 1 )
shader_param/width = 1.0
shader_param/pattern = 1
shader_param/inside = false
shader_param/add_margins = true

[sub_resource type="CanvasItemMaterial" id=1]
render_priority = 100
blend_mode = 1

[sub_resource type="Animation" id=2]
resource_name = "darkens"
tracks/0/type = "value"
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.1, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.854902, 0.784314, 0.545098, 1 ), Color( 0.643137, 0.545098, 0.854902, 1 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "evening"
tracks/0/type = "value"
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 0.854902, 0.784314, 0.545098, 1 ) ]
}

[sub_resource type="Animation" id=4]
resource_name = "night"
tracks/0/type = "value"
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.643137, 0.545098, 0.854902, 1 ), Color( 0.290196, 0.25098, 0.494118, 1 ) ]
}

[sub_resource type="CanvasItemMaterial" id=5]
light_mode = 1

[sub_resource type="NavigationPolygon" id=6]
vertices = PoolVector2Array( 99, 1728, 99, 189, 1638, 189, 1638, 1731 )
polygons = [ PoolIntArray( 0, 1, 2, 3 ) ]
outlines = [ PoolVector2Array( 99, 1728, 99, 189, 1638, 189, 1638, 1731 ) ]

[sub_resource type="CanvasItemMaterial" id=7]
light_mode = 1

[node name="map" type="Node2D"]
script = ExtResource( 1 )

[node name="b" parent="." instance=ExtResource( 6 )]
position = Vector2( -1, 1 )

[node name="sort" type="YSort" parent="."]

[node name="select" type="Sprite" parent="sort"]
visible = false
material = SubResource( 9 )
texture = ExtResource( 11 )
script = ExtResource( 12 )

[node name="car" parent="sort" instance=ExtResource( 7 )]
position = Vector2( 756, 660 )
scale = Vector2( 2, 2 )

[node name="player" parent="sort" groups=["kust"] instance=ExtResource( 8 )]
material = SubResource( 1 )
position = Vector2( 756, 669 )

[node name="layer2" type="Node2D" parent="."]

[node name="time" type="Timer" parent="."]
wait_time = 60.0

[node name="time_move" type="Timer" parent="."]

[node name="CanvasModulate" type="CanvasModulate" parent="."]

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasModulate"]
anims/darkens = SubResource( 2 )
anims/evening = SubResource( 3 )
anims/night = SubResource( 4 )

[node name="ui" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="stove_ui" parent="ui" instance=ExtResource( 5 )]
visible = false
material = SubResource( 5 )

[node name="TileMap" type="TileMap" parent="."]
cell_size = Vector2( 32, 32 )
cell_custom_transform = Transform2D( 32, 0, 0, 32, 0, 0 )
format = 1

[node name="Node2D" type="Node2D" parent="TileMap"]

[node name="zombies" type="Navigation2D" parent="."]
script = ExtResource( 3 )

[node name="zombie_spawn" type="Timer" parent="."]
wait_time = 5.0

[node name="TileMap2" type="TileMap" parent="."]
cell_size = Vector2( 32, 32 )
cell_custom_transform = Transform2D( 32, 0, 0, 32, 0, 0 )
format = 1

[node name="Node2D" type="Node2D" parent="TileMap2"]

[node name="screen_shot_icon" type="Timer" parent="."]
wait_time = 60.0
autostart = true

[node name="new_screen_shot" type="Timer" parent="."]
wait_time = 5.0
one_shot = true

[node name="save" type="Timer" parent="."]
wait_time = 10.0
autostart = true

[node name="dec_mob_nav" type="Navigation2D" parent="."]
script = ExtResource( 2 )
mob_dec = ExtResource( 4 )

[node name="NavigationPolygonInstance" type="NavigationPolygonInstance" parent="dec_mob_nav"]
visible = false
position = Vector2( -99, -195 )
navpoly = SubResource( 6 )

[node name="dec_nav_update" type="Timer" parent="."]
wait_time = 10.0
autostart = true

[node name="arrow_scene" type="Node2D" parent="."]
visible = false

[node name="arrow" type="Sprite" parent="arrow_scene"]
material = SubResource( 7 )
position = Vector2( -12, 0.499999 )
scale = Vector2( 1.2, 1.13333 )
z_index = 1
texture = ExtResource( 10 )

[node name="icon" type="Sprite" parent="arrow_scene/arrow"]
material = SubResource( 7 )
position = Vector2( 0, -0.441176 )
scale = Vector2( 0.5, 0.5 )
z_index = 1
texture = ExtResource( 9 )

[connection signal="timeout" from="time" to="." method="_on_time_timeout"]
[connection signal="timeout" from="time_move" to="." method="_on_time_move_timeout"]
[connection signal="timeout" from="zombie_spawn" to="." method="_on_zombie_spawn_timeout"]
[connection signal="timeout" from="screen_shot_icon" to="." method="_on_screen_shot_icon_timeout"]
[connection signal="timeout" from="new_screen_shot" to="." method="_on_new_screen_shot_timeout"]
[connection signal="timeout" from="save" to="." method="_on_save_timeout"]
[connection signal="timeout" from="dec_nav_update" to="dec_mob_nav" method="_on_dec_nav_update_timeout"]
